trigger:
  - master
  - feat/*

variables:
  azureSubscriptionEndpoint: julie-ng-connection
  azureContainerRegistry: julie.azurecr.io
  registryName: $(azureContainerRegistry)/$(Build.Repository.Name)
  imageTag: $(registryName):$(Build.BuildId)
  appName: azure-devops-acr-example

pool:
  vmImage: 'ubuntu-latest'

steps:

# -------------
# Node.js Steps
# -------------

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: npm install
  displayName: npm install

- script: npm run lint
  displayName: Lint Code

# -------------
# Docker Steps
# -------------

- script: |
    echo '##vso[task.setvariable variable=buildSha]'$(git rev-parse --short HEAD)''
    echo 'buildSha set to $(buildSha)'
  displayName: Get build git sha

- script: docker build --tag $(imageTag)-$(buildSha) .
  displayName: 'Docker: Build and tag image'

# Use the task to avoid embedding credentials in pipeline
- task: Docker@1
  displayName: 'Docker: login ACR'
  inputs:
    command: login
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)

- script: docker push $(imageTag)-$(buildSha)
  displayName: 'Docker: Push image'

- script: docker logout $(azureContainerRegistry)
  displayName: 'Docker: logout ACR'

# Only deploy master branch if previous steps successful
- task: AzureWebAppContainer@1
  displayName: Deploy container as Azure Web App
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    appName: $(appName)
    azureSubscription: $(azureSubscriptionEndpoint)
    imageName: $(imageTag)-$(buildSha)
